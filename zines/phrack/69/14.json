{
  "reference": "Volume 0x0f, Issue 0x45, Phile #0x0e of 0x10",
  "title": "OR'LYEH? The Shadow over Firefox",
  "authors": "argp",
  "date": "2015",
  "short_summary": "This article presents a reusable exploitation methodology for modern versions of the Mozilla Firefox browser, focusing on memory corruption vulnerabilities and the intricacies of Firefox's memory management and security features.",
  "summary": "In this comprehensive paper, argp expands on his Infiltrate 2015 talk, detailing a systematic approach to exploit memory corruption vulnerabilities in Firefox. The methodology is applicable across various platforms and focuses on leveraging the intricacies of Firefox's memory management, particularly the SpiderMonkey JavaScript engine's handling of jsvals and jsobjects. The paper delves into the representation of these objects in memory, the generational garbage collection (GGC) employed by Firefox, and the jemalloc memory allocator's role in managing memory allocations. The author outlines the hardening features of Firefox that impact exploit development, including PresArena and jemalloc heap sanitization, while also providing insights into the exploitation techniques that can bypass these protections.\n\nThe article culminates in a detailed discussion of specific exploitation techniques, including the use of ArrayObjects within ArrayObjects, heap feng shui, and arbitrary memory leaks. Argp provides practical examples and code snippets to illustrate the exploitation process, emphasizing the importance of understanding Firefox's memory layout and the interactions between JavaScript objects and the underlying memory management systems. This paper serves as a valuable resource for security researchers and exploit developers looking to deepen their understanding of Firefox's architecture and the potential vulnerabilities within it."
}