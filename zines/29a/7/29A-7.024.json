{
  "reference": "Volume Two, Issue 12, Phile #6 of 11",
  "title": "Invisibility on NT boxes",
  "authors": "Holy_Father <holy_father@phreaker.net>",
  "date": "05.08.2003",
  "historical_context": "This article was written during a time when rootkits were becoming more prevalent, particularly for Windows NT systems. It provides insight into the techniques used by malware authors to hide their presence on systems.",
  "target_audience": "Security professionals, malware researchers, and hackers interested in rootkit development.",
  "short_summary": "The article details various techniques for hiding files, processes, and registry entries on Windows NT systems by hooking Windows API functions. It provides a comprehensive guide on how to implement these methods effectively.",
  "summary": "In 'Invisibility on NT boxes', Holy_Father explores advanced techniques for achieving invisibility on Windows NT systems through API hooking. The article begins with an introduction to the concept of hiding objects such as files, processes, and registry entries by manipulating the output of system calls. The author emphasizes the importance of understanding the Windows API and provides detailed examples of functions like NtQueryDirectoryFile and NtEnumerateKey, explaining how to alter their outputs to conceal specific objects from the operating system's view. The methods discussed are rooted in the author's own experiences while developing rootkit code, making the content both practical and insightful for those looking to understand or develop similar techniques.\n\nThe article also covers the intricacies of hiding processes and registry keys, highlighting the challenges posed by the hierarchical structure of the Windows registry. Techniques for hooking system services and drivers are discussed, along with the necessary permissions and rights required for effective implementation. The author provides a thorough examination of memory management and handle manipulation, ensuring that readers grasp the complexities involved in maintaining invisibility. Overall, this article serves as a foundational resource for anyone interested in the mechanics of rootkits and the broader implications for system security."
}