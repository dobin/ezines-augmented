{
  "reference": "Volume Two, Issue 12, Phile #6 of 11",
  "title": "Cross Infection Tutorial for Office'97 PART I",
  "authors": "Reptile/29A",
  "date": "",
  "historical_context": "This article is part of the early exploration of macro viruses, particularly focusing on cross-infection techniques between Microsoft Office applications, which was a significant concern in the late 1990s.",
  "target_audience": "Hackers, malware researchers, security professionals, and those interested in the history of computer viruses.",
  "short_summary": "This tutorial details the process of creating cross-infecting macro viruses between Microsoft Word and Excel using OLE and DDE techniques. It provides practical code examples and discusses the advantages and disadvantages of different methods.",
  "summary": "In this article, Reptile/29A shares insights into the creation of cross-infecting macro viruses for Office'97, specifically focusing on the transition of malicious code between Word and Excel. The author begins by discussing the challenges faced when attempting to utilize OLE2 and VBA, ultimately pivoting to DDE (Dynamic Data Exchange) as a more viable solution for transferring data between applications. The tutorial outlines a method where a virus can export its source code to the hard disk and then drop a global template that serves as a loader for importing the virus into the other application. The article emphasizes the importance of stealth in the infection process, noting that earlier methods using DDE were often too visible to users, prompting the need for more discreet techniques. \n\nThe tutorial provides detailed code snippets and a step-by-step guide on how to implement the cross-infection process. It explains how to check if documents are already infected, how to manipulate the registry to find application paths, and how to replace legitimate files with infected versions. The author also highlights the differences in automacros between Word and Excel, ensuring that the virus can execute correctly in both environments. This article serves as a foundational piece for understanding macro virus development and the techniques used to exploit Office applications during a time when such vulnerabilities were becoming increasingly prevalent."
}